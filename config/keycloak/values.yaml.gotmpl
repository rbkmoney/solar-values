postgresql:
    enabled: false

podLabels:
  selector.cilium.rbkmoney/release: {{ .Release.Name }}

image:
  tag: 12.0.4

extraEnv: |
  - name: PROXY_ADDRESS_FORWARDING
    value: "true"
  - name: DB_VENDOR
    value: postgres
  - name: DB_ADDR
    value: postgres-postgresql
  - name: DB_PORT
    value: "5432"
  - name: DB_DATABASE
    value: keycloak
  - name: DB_USER
    value: postgres
  - name: DB_PASSWORD
    value: "H@ckM3"
  - name: JAVA_OPTS
    value: >-
      -XX:+UseContainerSupport
      -XX:MaxRAMPercentage=50.0
{{- if .Values.services.global.ipv6only }}
      -Djava.net.preferIPv4Stack=false
      -Djava.net.preferIPv6Addresses=true
{{- else }}
      -Djava.net.preferIPv4Stack=true
{{- end }}
      -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS
      -Djava.awt.headless=true
  - name: KEYCLOAK_IMPORT
    value: /realm/internal.json,/realm/external.json

extraVolumes: |
  - name: keycloak-realms-volume
    configMap:
      name: keycloak-realms

extraVolumeMounts: |
  - name: keycloak-realms-volume
    mountPath: "/realm/"
    readOnly: true

ingress:
  enabled: true
  servicePort: http
  annotations: {}
    ## Resolve HTTP 502 error using ingress-nginx:
    ## See https://www.ibm.com/support/pages/502-error-ingress-keycloak-response
    # nginx.ingress.kubernetes.io/proxy-buffer-size: 128k

  rules:
    - host: 'auth.{{ .Values.services.ingress.rootDomain | default "rbk.dev" }}'
      paths:
        - /
{{- if .Values.services.ingress.tls.enabled }}
  tls:
    - hosts:
        - 'auth.{{ .Values.services.ingress.rootDomain | default "rbk.dev" }}'
      secretName: {{ .Values.services.ingress.tls.secretName }}
{{- end }}

ciliumPolicies:
  - filters:
    - port: 5432
      type: TCP
    name: postgres
    namespace: {{ .Release.Namespace }}
